plugins {
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group 'com.peterabyte'
version '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

def junitVersion = '4.11'
def mockitoVersion = '1.9.5'
def assertjVersion = '2.0.0'
def log4jVersion = '2.5'
def springBootVersion = '2.0.1.RELEASE'
def h2Version = '1.4.197'
def thymeleafSpringSecurityVersion = '3.0.2.RELEASE'
def slugifyVersion = '2.2'
def seleniumVersion = '3.12.0'
def cucumberVersion = '3.0.2'

def springBootUserName = 'user'
def springBootPassword = '1234'
def serverPort = '11001'
def debugPort = '11005'

repositories {
    mavenCentral()
}

configurations {
    implementation {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    testImplementation("junit:junit:$junitVersion")
    testImplementation("org.mockito:mockito-core:$mockitoVersion")
    testImplementation("org.assertj:assertj-core:$assertjVersion")
    testImplementation("org.apache.logging.log4j:log4j-core:$log4jVersion")
    testImplementation("org.seleniumhq.selenium:selenium-java:$seleniumVersion")
    testImplementation("io.cucumber:cucumber-junit:$cucumberVersion")
    testImplementation("io.cucumber:cucumber-java:$cucumberVersion")
    testImplementation("io.cucumber:cucumber-spring:$cucumberVersion")
    testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-starter-log4j2:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-starter-security:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-starter-mail:$springBootVersion")
    implementation("org.thymeleaf.extras:thymeleaf-extras-springsecurity4:${thymeleafSpringSecurityVersion}")
    implementation("com.github.slugify:slugify:$slugifyVersion")
    implementation("com.github.slugify:slugify:$slugifyVersion")
    implementation("javax.xml.bind:jaxb-api:2.3.1")
    runtimeOnly("com.sun.xml.bind:jaxb-core:2.3.0.1")
    runtimeOnly("com.sun.xml.bind:jaxb-impl:2.3.0.1")
    runtimeOnly("javax.activation:activation:1.1.1")
    runtimeOnly("com.h2database:h2:$h2Version")
    developmentOnly("org.springframework.boot:spring-boot-devtools:$springBootVersion")
}

test {
    reports {
        html.enabled = false
        junitXml.enabled = true
    }

    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
        exceptionFormat = "full"
    }

    exclude '**/*SmokeTestRunner*'
}

task uiTest(type: Test) {
    reports {
        html.enabled = true
        junitXml.enabled = true
    }

    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
        exceptionFormat = "full"
    }

    include '**/*SmokeTestRunner*'
}

bootRun {
    sourceResources sourceSets.main
    jvmArgs = [
            "-Dserver.port=$serverPort",
            "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=$debugPort",
            "-Dsecurity.user.name=$springBootUserName",
            "-Dsecurity.user.password=$springBootPassword"
    ]
}
